AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless To-Do List Application

Parameters:
  Stage:
    Type: String
    Default: dev
    Description: Deployment stage (e.g., dev, prod)

Resources:
  # DynamoDB Table
  TodosTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub todos-${Stage}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  # Lambda Functions
  GetTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/
      Handler: getTodos.handler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TODOS_TABLE: !Ref TodosTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TodosTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /todos
            Method: get
            RestApiId: !Ref TodosApi

  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/
      Handler: createTodo.handler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TODOS_TABLE: !Ref TodosTable
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref TodosTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /todos
            Method: post
            RestApiId: !Ref TodosApi

  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/
      Handler: updateTodo.handler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TODOS_TABLE: !Ref TodosTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodosTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: put
            RestApiId: !Ref TodosApi

  DeleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/
      Handler: deleteTodo.handler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TODOS_TABLE: !Ref TodosTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodosTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: delete
            RestApiId: !Ref TodosApi

  # API Gateway
  TodosApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: true
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"

  # API Key for API Gateway
  TodosApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Sub TodosApiKey-${Stage}
      Enabled: true
      StageKeys:
        - RestApiId: !Ref TodosApi
          StageName: !Ref Stage

  # Usage Plan for API Gateway
  TodosUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      ApiStages:
        - ApiId: !Ref TodosApi
          Stage: !Ref Stage
      Description: !Sub Todos API Usage Plan (${Stage})
      UsagePlanName: !Sub TodosUsagePlan-${Stage}
      Quota:
        Limit: 5000
        Period: MONTH
      Throttle:
        BurstLimit: 100
        RateLimit: 50

  # Associate API Key with Usage Plan
  TodosUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref TodosApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref TodosUsagePlan

  # Web Application Firewall (WAF)
  TodosWebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub TodosWebACL-${Stage}
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        CloudWatchMetricsEnabled: true
        MetricName: !Sub TodosWebACL-${Stage}
        SampledRequestsEnabled: true
      Rules:
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 0
          OverrideAction:
            None: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesCommonRuleSet
            SampledRequestsEnabled: true
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
        - Name: RateLimit
          Priority: 1
          Action:
            Block: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: RateLimit
            SampledRequestsEnabled: true
          Statement:
            RateBasedStatement:
              Limit: 100
              AggregateKeyType: IP

  # Associate WAF with API Gateway Stage
  WebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Sub arn:aws:apigateway:${AWS::Region}::/restapis/${TodosApi}/stages/${Stage}
      WebACLArn: !GetAtt TodosWebACL.Arn

Outputs:
  ApiUrl:
    Description: URL of the API Gateway
    Value: !Sub https://${TodosApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
  
  ApiKeyId:
    Description: ID of the API Key
    Value: !Ref TodosApiKey
  
  TodosTableName:
    Description: Name of the DynamoDB table
    Value: !Ref TodosTable